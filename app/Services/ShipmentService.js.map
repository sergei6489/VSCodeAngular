{"version":3,"sources":["Services/ShipmentService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;YAUA;gBAII,yBAA0B,IAAU;oBAAV,SAAI,GAAJ,IAAI,CAAM;gBACpC,CAAC;gBAED,sCAAY,GAAZ,UAAc,MAAuB;oBACjC,IAAI,CAAC,OAAO,GAAG,IAAI,cAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;oBACnE,IAAI,CAAC,OAAO,GAAG,IAAI,qBAAc,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;oBAC7D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qCAAqC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;yBAC7F,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACvD,CAAC;gBAED,2CAAiB,GAAjB,UAAkB,EAAU;oBACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,MAAgB;wBAExF,MAAM,CAAC,MAAM,CAAC;oBAClB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;gBAED,sCAAY,GAAZ,UAAa,QAAkB;oBAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;wBACtD,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,SAAS,EAAE,CAAC;gBAC3C,CAAC;gBAEO,qCAAW,GAAnB,UAAoB,GAAa;oBAC7B,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC;wBACtC,MAAM,IAAI,KAAK,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;oBACpD,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACxB,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;gBACxB,CAAC;gBACO,qCAAW,GAAnB,UAAoB,KAAU;oBAC1B,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC;oBAC7C,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBACtB,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACpC,CAAC;gBArCL;oBAAC,iBAAU,EAAE;;mCAAA;gBAsCb,sBAAC;YAAD,CArCA,AAqCC,IAAA;YArCD,6CAqCC,CAAA","file":"Services/ShipmentService.js","sourcesContent":["///<reference path=\"../typings/tsd.d.ts\" />\r\nimport { Injectable } from \"@angular/core\"\r\nimport {Http, Headers, Response, RequestOptions} from \"@angular/http\"\r\nimport {Shipment} from \"../ViewModels/ShipmentViewModel\"\r\nimport {SearchViewModel} from \"../ViewModels/SearchViewModel\"\r\nimport {PagerShipmentsViewModel} from \"../ViewModels/PagerShipmentsViewModel\"\r\nimport { Observable }  from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n@Injectable()\r\nexport class ShipmentService\r\n{\r\n    private headers: Headers;\r\n    private options: RequestOptions;\r\n    public constructor(public http: Http) {\r\n    }\r\n\r\n    getShipments( search: SearchViewModel ) {\r\n        this.headers = new Headers({ 'Content-Type': 'application/json' });\r\n        this.options = new RequestOptions({ headers: this.headers });\r\n        return this.http.post('http://localhost:4163/shipments/Get', JSON.stringify(search), this.options)\r\n            .map(this.ExtractData).catch(this.handleError);\r\n    }\r\n\r\n    getShipmentDetail(id: number) {\r\n        return this.http.get('?id=' + id).map(res => res.json(), this.headers).map((result: Shipment) =>\r\n        {\r\n            return result;\r\n        }).subscribe();\r\n    }\r\n\r\n    saveShipment(shipment: Shipment) {\r\n        this.http.post('', JSON.stringify(shipment), this.headers).\r\n            map(res => res.json()).subscribe();\r\n    }\r\n\r\n    private ExtractData(res: Response) {\r\n        if (res.status < 200 || res.status >= 300)\r\n            throw new Error('Response error:' + res.status);\r\n        let result = res.json();\r\n        return result || {};\r\n    }\r\n    private handleError(error: any) {\n        let errMsg = error.message || 'Server error';\n        console.error(errMsg); \n        return Observable.throw(errMsg);\n    }\r\n}"],"sourceRoot":"/source/"}